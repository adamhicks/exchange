// Code generated by "stringer -type=Type -trimprefix=Type"; DO NOT EDIT.

package matcher

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeUnknown-0]
	_ = x[TypeCommandOld-1]
	_ = x[TypeCommandUnknown-2]
	_ = x[TypeCancelFailed-3]
	_ = x[TypeCancelled-4]
	_ = x[TypePostFailed-5]
	_ = x[TypePosted-6]
	_ = x[TypeMarketEmpty-7]
	_ = x[TypeMarketPartial-8]
	_ = x[TypeMarketFull-9]
	_ = x[TypeLimitTaker-10]
	_ = x[TypeLimitPartial-11]
	_ = x[TypeLimitMaker-12]
}

const _Type_name = "UnknownCommandOldCommandUnknownCancelFailedCancelledPostFailedPostedMarketEmptyMarketPartialMarketFullLimitTakerLimitPartialLimitMaker"

var _Type_index = [...]uint8{0, 7, 17, 31, 43, 52, 62, 68, 79, 92, 102, 112, 124, 134}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
